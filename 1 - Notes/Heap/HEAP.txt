HEAP

Recordar que una forma de heap no implica necesariamente que todos los elementos estén ordenados de menor a mayor, o de mayor a menor.

Como insertar elementos en el heap -> opciones (ver ppt)
opcion 1, funciona: O(n log n)
op 2, funciona: O(n log n)
op 3, no funciona, porque upheap asume que todo lo que está arriba del nodo cumple la propiedad de heap
op 4, funciona, porque el ordenamiento total siempre cumple la propiedad de heap: O(n log n)
op 5, no funciona, porque no puedo asumir nada sobre los datos de entrada
op 6, no funciona, porque downheap asume que tanto a izq como der hay un heap

resumen 5 y 6:
downheap : asume lo que está abajo está heapeado
upheap: asume lo que está arriba está heapeado

op 7, funciona, porque cuanto a más nodos, menos swaps, y viceversa: complejidad: O(n)

Usaremos este último método por tener la complejidad más baja
--------------------------------------------------------------------

HEAPSORT (ver ppt)

está inspirado en el algoritmo de selección

orden: O(n log n), y NO se puede hacer mejor, porque es un algoritmo de ordenamiento comparativo. Como es comparativo, no necesito información adicional.

el algoritmo es inplace, y no es estable ni a palos (caso trivial: arreglo de 2 elementos iguales)

 