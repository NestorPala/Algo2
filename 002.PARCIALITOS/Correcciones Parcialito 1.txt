Correcciones Parcialito 1


2. No confundir función con primitiva

4. Usamos búsqueda binaria y cuando encontramos el número hacemos búsqueda binaria a la derecha de nuevo hasta que ya ho haya coincidencias. Orden: O(log N)

6. Ordenar discos de musica
(No hacía falta ordenar por el nombre del disco, pero sí por el año)
COUNTING SORT
* Tenemos rango acotado (1970-1999), armamos un arreglo de 30 elementos
BUCKET SORT
* No es correcto usarlo porque no sabemos la proporción de discos lanzados por año, por lo tanto no podemos asegurar que haya una distribución lo suficientemente uniforme de los datos.
RADIX SORT
* Hacemos 2 radix con los ultimos dos valores

------------
5. Ordenar mazo de cartas (palo y número)
COUNTING SORT
* Hacemos un arreglo de 52 elementos con las dif. cartas ordenadas
* a) Es estable? Sí, es counting sort
* b) Orden? El de counting sort
* c) Condiciones satisfechas? Rango acotado

BUCKET SORT
* 4 baldes, uno por palo
* En cada balde las cartas se ordenan por número, usando Counting Sort
* Luego aplicamos ordenamiento de los buckets
* ¿Por qué bucket sort? Porque en un mazo de cartas la proporción de cartas por palo suele ser exactamente la misma o ligeramente diferente (si se pierden cartas)

RADIX SORT
* Tenemos dos criterios de ordenamiento distintos, palo, y número
* El tipo de carta es más significativo que el número
* Hacemos primero una ronda de radix con el valor menos significativo (números del 1 al 13), y luego una segunda ronda de radix con el valor más significativo (oro, espada, basto o copa)
* Para ordenar de 1 a 13, Counting Sort (rango acotado)
* Para ordenar por palo, también podemos utilizar Counting (porque el rango de palos también es acotado, solo 4)
